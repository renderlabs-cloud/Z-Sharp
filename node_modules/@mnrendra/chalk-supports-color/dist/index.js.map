{"version":3,"file":"index.js","sources":["../src/node/utils/supportsLevel.ts","../src/utils/translateLevel.ts","../src/node/utils/createSupportsColor.ts","../src/node/main.ts","../src/node/index.ts"],"sourcesContent":["import type { ColorSupportLevel } from '../../types'\nimport type { Options, Stream } from '../types'\n\nimport { release } from 'node:os'\n\ntype GlobalThis = typeof globalThis & {\n  readonly Deno?: {\n    readonly args?: string[]\n  }\n}\n\nconst hasFlag = (\n  flag: string,\n  argv: string[] = (globalThis as GlobalThis).Deno?.args ?? process.argv\n): boolean => {\n  const prefix = '--' // flag.startsWith('-') ? '' : flag.length === 1 ? '-' : '--'\n  const position = argv.indexOf(prefix + flag)\n  const terminator = argv.indexOf('--')\n\n  return position !== -1 && (terminator === -1 || position < terminator)\n}\n\nconst supportsLevel = (stream: Stream, {\n  streamIsTTY,\n  sniffFlags = true\n}: Options = {}): ColorSupportLevel => {\n  const {\n    FORCE_COLOR,\n    TF_BUILD,\n    AGENT_NAME,\n    TERM,\n    CI,\n    TRAVIS,\n    CIRCLECI,\n    APPVEYOR,\n    GITLAB_CI,\n    BUILDKITE,\n    DRONE,\n    GITHUB_ACTIONS,\n    GITEA_ACTIONS,\n    CI_NAME,\n    TEAMCITY_VERSION,\n    COLORTERM,\n    TERM_PROGRAM,\n    TERM_PROGRAM_VERSION\n  } = process.env\n\n  /**\n   * Use: FORCE_COLOR env\n   */\n\n  if (FORCE_COLOR === 'true' || FORCE_COLOR === '') return 1\n  if (FORCE_COLOR === 'false') return 0\n\n  const level = Math.min(parseInt(FORCE_COLOR ?? '', 10), 3)\n\n  if (\n    level === 0 ||\n    level === 1 ||\n    level === 2 ||\n    level === 3\n  ) return level\n\n  /**\n   * Use: Sniff Flags\n   */\n\n  if (sniffFlags) {\n    if (\n      hasFlag('no-color') ||\n      hasFlag('no-colors') ||\n      hasFlag('color=false') ||\n      hasFlag('color=never')\n    ) {\n      return 0\n    } else if (\n      hasFlag('color') ||\n      hasFlag('colors') ||\n      hasFlag('color=true') ||\n      hasFlag('color=always')\n    ) {\n      return 1\n    } else if (hasFlag('color=256')) {\n      return 2\n    } else if (\n      hasFlag('color=16m') ||\n      hasFlag('color=full') ||\n      hasFlag('color=truecolor')\n    ) {\n      return 3\n    }\n  }\n\n  /**\n   * Use: Azure\n   */\n\n  // Check for Azure DevOps pipelines.\n  // Has to be above the `!streamIsTTY` check.\n  if (TF_BUILD !== undefined && AGENT_NAME !== undefined) return 1\n\n  /**\n   * Use: TTY\n   */\n\n  if (typeof stream === 'object' && streamIsTTY !== true) return 0\n\n  /**\n   * Use: Dumb\n   */\n\n  if (TERM === 'dumb') return 0\n\n  /**\n   * Use: Windows\n   */\n\n  if (process.platform === 'win32') {\n    // Windows 10 build 10586 is the first Windows release that supports 256.\n    // Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n    const osRelease = release().split('.')\n\n    if (\n      Number(osRelease[0]) >= 10 &&\n      Number(osRelease[2]) >= 10_586\n    ) return Number(osRelease[2]) >= 14_931 ? 3 : 2\n\n    return 1\n  }\n\n  /**\n   * Use: CI\n   */\n\n  if (CI !== undefined) {\n    if (\n      GITHUB_ACTIONS !== undefined ||\n      GITEA_ACTIONS !== undefined\n    ) return 3\n\n    if (\n      [\n        TRAVIS,\n        CIRCLECI,\n        APPVEYOR,\n        GITLAB_CI,\n        BUILDKITE,\n        DRONE\n      ].some(sign => sign !== undefined) ||\n      CI_NAME === 'codeship'\n    ) return 1\n\n    return 0\n  }\n  /**\n   * Use: Team City\n   */\n\n  if (\n    TEAMCITY_VERSION !== undefined\n  ) return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(TEAMCITY_VERSION) ? 1 : 0\n\n  /**\n   * Use: Terminal\n   */\n\n  if (COLORTERM === 'truecolor') return 3\n  if (TERM === 'xterm-kitty') return 3\n\n  if (TERM_PROGRAM !== undefined) {\n    const version = parseInt((TERM_PROGRAM_VERSION ?? '').split('.')[0], 10)\n\n    switch (TERM_PROGRAM) {\n      case 'iTerm.app': return version >= 3 ? 3 : 2\n      case 'Apple_Terminal': return 2\n      // No default\n    }\n  }\n\n  if (/-256(color)?$/i.test(TERM ?? '')) return 2\n  if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(TERM ?? '')) return 1\n  if (COLORTERM !== undefined) return 1\n\n  /**\n   * Use: defualt\n   */\n\n  return 0\n}\n\nexport default supportsLevel\n","import type { ColorInfo, ColorSupportLevel } from '../types'\n\nconst translateLevel = (\n  level: ColorSupportLevel\n): ColorInfo => {\n  if (!Number.isInteger(level) || ![0, 1, 2, 3].includes(level)) {\n    throw new Error('The `level` value should be an integer from 0 to 3!')\n  }\n\n  switch (level) {\n    case 0:\n      return false\n    case 1:\n      return {\n        level: 1,\n        hasBasic: true,\n        has256: false,\n        has16m: false\n      }\n    case 2:\n      return {\n        level: 2,\n        hasBasic: true,\n        has256: true,\n        has16m: false\n      }\n    case 3:\n      return {\n        level: 3,\n        hasBasic: true,\n        has256: true,\n        has16m: true\n      }\n  }\n}\n\nexport default translateLevel\n","import type { ColorSupport } from '../../types'\nimport type { Options, Stream } from '../types'\n\nimport { translateLevel } from '../../utils'\nimport supportsLevel from './supportsLevel'\n\nconst createSupportsColor = (stream: Stream, {\n  streamIsTTY,\n  sniffFlags = true\n}: Options = {}): ColorSupport | false => {\n  const level = supportsLevel(stream, {\n    streamIsTTY: streamIsTTY ?? stream.isTTY,\n    sniffFlags\n  })\n\n  return translateLevel(level)\n}\n\nexport default createSupportsColor\n","import type { SupportsColor } from '../types'\n\nimport { isatty } from 'node:tty'\n\nimport { createSupportsColor } from './utils'\n\nconst main = (): SupportsColor => {\n  return {\n    stdout: createSupportsColor({ isTTY: isatty(1) }),\n    stderr: createSupportsColor({ isTTY: isatty(2) })\n  }\n}\n\nexport default main\n","import main from './main'\n\nexport type { Options } from './types'\n\nexport { createSupportsColor } from './utils'\n\nexport const supportsColor = main\n\nexport const stdout = supportsColor().stdout\nexport const stderr = supportsColor().stderr\n\nexport default supportsColor()\n"],"names":["hasFlag","flag","argv","position","terminator","supportsLevel","stream","streamIsTTY","sniffFlags","FORCE_COLOR","TF_BUILD","AGENT_NAME","TERM","CI","TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","BUILDKITE","DRONE","GITHUB_ACTIONS","GITEA_ACTIONS","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM","TERM_PROGRAM_VERSION","level","osRelease","release","sign","version","translateLevel","createSupportsColor","main","isatty","supportsColor","stdout","stderr","o"],"mappings":"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"}