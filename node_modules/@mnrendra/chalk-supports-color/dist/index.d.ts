import { WriteStream } from 'node:tty';

interface Options {
    /**
     * Whether `process.argv` should be sniffed for `--color` and `--no-color`
     * flags.
     *
     * @default true
     */
    readonly sniffFlags?: boolean;
    /**
     * Whether `isTTY` true or false.
     */
    readonly streamIsTTY?: boolean;
}

type Stream = Partial<WriteStream> & {
    readonly isTTY: boolean;
};

/**
 * The color level:
 *
 * `0` = All colors disabled.
 *
 * `1` = ANSI Basic 16 colors support.
 *
 * `2` = ANSI 256 colors support.
 *
 * `3` = ANSI Truecolor 16 million colors support.
 *
 * @see https://github.com/chalk/supports-color
 */
type ColorSupportLevel = 0 | 1 | 2 | 3;

/**
 * Detect whether the terminal supports color.
 *
 * @see https://github.com/chalk/supports-color
 */
interface BaseColorSupport {
    /**
     * The color level:
     *
     * `0` = All colors disabled.
     *
     * `1` = ANSI Basic 16 colors support.
     *
     * `2` = ANSI 256 colors support.
     *
     * `3` = ANSI Truecolor 16 million colors support.
     *
     * @see https://github.com/chalk/supports-color
     */
    readonly level: ColorSupportLevel;
    /**
     * Whether ANSI Basic 16 colors are supported.
     *
     * @see https://github.com/chalk/supports-color
     */
    readonly hasBasic: boolean;
    /**
     * Whether ANSI 256 colors are supported.
     *
     * @see https://github.com/chalk/supports-color
     */
    readonly has256: boolean;
    /**
     * Whether ANSI Truecolor 16 million colors are supported.
     *
     * @see https://github.com/chalk/supports-color
     */
    readonly has16m: boolean;
}
interface ColorSupportLevel1 extends BaseColorSupport {
    level: 1;
    hasBasic: true;
    has256: false;
    has16m: false;
}
interface ColorSupportLevel2 extends BaseColorSupport {
    level: 2;
    hasBasic: true;
    has256: true;
    has16m: false;
}
interface ColorSupportLevel3 extends BaseColorSupport {
    level: 3;
    hasBasic: true;
    has256: true;
    has16m: true;
}
type ColorSupport = ColorSupportLevel1 | ColorSupportLevel2 | ColorSupportLevel3;

type ColorInfo = ColorSupport | false;

interface SupportsColor {
    readonly stdout: ColorInfo;
    readonly stderr: ColorInfo;
}

declare const createSupportsColor: (stream: Stream, { streamIsTTY, sniffFlags }?: Options) => ColorSupport | false;

declare const supportsColor: () => SupportsColor;
declare const stdout: ColorInfo;
declare const stderr: ColorInfo;
declare const _default: SupportsColor;

export { type ColorInfo, type ColorSupport, type ColorSupportLevel, type Options, type SupportsColor, createSupportsColor, _default as default, stderr, stdout, supportsColor };
//# sourceMappingURL=index.d.ts.map
