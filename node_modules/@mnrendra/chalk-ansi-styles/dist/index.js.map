{"version":3,"file":"index.js","sources":["../src/consts/ESCAPE.ts","../src/consts/LAYER.ts","../src/consts/MODIFIER.ts","../src/consts/FOREGROUND_COLOR.ts","../src/consts/BACKGROUND_COLOR.ts","../src/utils/toAnsi.ts","../src/utils/toAnsi16.ts","../src/utils/toAnsi256.ts","../src/utils/toAnsi16m.ts","../src/utils/pairCS.ts","../src/utils/mapCodes.ts","../src/converters/ansi256ToAnsi.ts","../src/converters/rgbToAnsi256.ts","../src/converters/hexToRgb.ts","../src/converters/hexToAnsi256.ts","../src/converters/hexToAnsi.ts","../src/converters/rgbToAnsi.ts","../src/styles/modifier.ts","../src/styles/foregroundColor.ts","../src/styles/backgroundColor.ts","../src/main.ts"],"sourcesContent":["const ESCAPE = '\\u001B['\n\nexport type Escape = typeof ESCAPE\n\nexport default ESCAPE\n","const LAYER = {\n  foreground: 38, // Foreground\n  background: 48 // Background\n} as const\n\nexport type Layer =\n| typeof LAYER['foreground']\n| typeof LAYER['background']\n\nexport default LAYER\n","const MODIFIER = {\n  reset: [0, 0],\n  // 21 isn't widely supported and 22 does the same thing\n  bold: [1, 22],\n  dim: [2, 22],\n  italic: [3, 23],\n  underline: [4, 24],\n  inverse: [7, 27],\n  hidden: [8, 28],\n  strikethrough: [9, 29],\n  overline: [53, 55]\n} as const\n\nexport default MODIFIER\n","export const FOREGROUND_COLOR_CLOSE = 39\n\nconst FOREGROUND_COLOR = {\n  black: [30, FOREGROUND_COLOR_CLOSE],\n  red: [31, FOREGROUND_COLOR_CLOSE],\n  green: [32, FOREGROUND_COLOR_CLOSE],\n  yellow: [33, FOREGROUND_COLOR_CLOSE],\n  blue: [34, FOREGROUND_COLOR_CLOSE],\n  magenta: [35, FOREGROUND_COLOR_CLOSE],\n  cyan: [36, FOREGROUND_COLOR_CLOSE],\n  white: [37, FOREGROUND_COLOR_CLOSE],\n  // Bright color\n  gray: [90, FOREGROUND_COLOR_CLOSE], // Alias of `blackBright`\n  grey: [90, FOREGROUND_COLOR_CLOSE], // Alias of `blackBright`\n  blackBright: [90, FOREGROUND_COLOR_CLOSE],\n  redBright: [91, FOREGROUND_COLOR_CLOSE],\n  greenBright: [92, FOREGROUND_COLOR_CLOSE],\n  yellowBright: [93, FOREGROUND_COLOR_CLOSE],\n  blueBright: [94, FOREGROUND_COLOR_CLOSE],\n  magentaBright: [95, FOREGROUND_COLOR_CLOSE],\n  cyanBright: [96, FOREGROUND_COLOR_CLOSE],\n  whiteBright: [97, FOREGROUND_COLOR_CLOSE]\n} as const\n\nexport default FOREGROUND_COLOR\n","export const BACKGROUND_COLOR_CLOSE = 49\n\nconst BACKGROUND_COLOR = {\n  bgBlack: [40, BACKGROUND_COLOR_CLOSE],\n  bgRed: [41, BACKGROUND_COLOR_CLOSE],\n  bgGreen: [42, BACKGROUND_COLOR_CLOSE],\n  bgYellow: [43, BACKGROUND_COLOR_CLOSE],\n  bgBlue: [44, BACKGROUND_COLOR_CLOSE],\n  bgMagenta: [45, BACKGROUND_COLOR_CLOSE],\n  bgCyan: [46, BACKGROUND_COLOR_CLOSE],\n  bgWhite: [47, BACKGROUND_COLOR_CLOSE],\n  // Bright color\n  bgGray: [100, BACKGROUND_COLOR_CLOSE], // Alias of `bgBlackBright`\n  bgGrey: [100, BACKGROUND_COLOR_CLOSE], // Alias of `bgBlackBright`\n  bgBlackBright: [100, BACKGROUND_COLOR_CLOSE],\n  bgRedBright: [101, BACKGROUND_COLOR_CLOSE],\n  bgGreenBright: [102, BACKGROUND_COLOR_CLOSE],\n  bgYellowBright: [103, BACKGROUND_COLOR_CLOSE],\n  bgBlueBright: [104, BACKGROUND_COLOR_CLOSE],\n  bgMagentaBright: [105, BACKGROUND_COLOR_CLOSE],\n  bgCyanBright: [106, BACKGROUND_COLOR_CLOSE],\n  bgWhiteBright: [107, BACKGROUND_COLOR_CLOSE]\n} as const\n\nexport default BACKGROUND_COLOR\n","import type { Escape } from '../consts'\n\nimport { ESCAPE } from '../consts'\n\nexport type ANSI<Param extends string = string> = `${Escape}${Param}m`\n\nconst toAnsi = <Param extends string = string>(\n  param: Param\n): ANSI<Param> => {\n  return `${ESCAPE}${param}m`\n}\n\nexport default toAnsi\n","import type { ANSI } from './toAnsi'\n\nimport toAnsi from './toAnsi'\n\nexport type ANSI16<Num extends number = number> = ANSI<`${Num}`>\n\nconst toAnsi16 = <Num extends number = number>(\n  num: Num\n): ANSI16<Num> => {\n  return toAnsi(`${num}`)\n}\n\nexport default toAnsi16\n","import type { Layer as Lyr } from '../consts'\n\nimport type { ANSI } from './toAnsi'\n\nimport toAnsi from './toAnsi'\n\nexport type ANSI256<Layer extends Lyr = Lyr, Num extends number = number> = ANSI<`${Layer};5;${Num}`>\n\nconst toAnsi256 = <Layer extends Lyr = Lyr, Num extends number = number>(\n  layer: Layer,\n  num: Num\n): ANSI256<Layer, Num> => {\n  return toAnsi(`${layer};5;${num}`)\n}\n\nexport default toAnsi256\n","import type { Layer as Lyr } from '../consts'\n\nimport type { ANSI } from './toAnsi'\n\nimport toAnsi from './toAnsi'\n\nexport type ANSI16m<Layer extends Lyr = Lyr, Red extends number = number, Green extends number = number, Blue extends number = number> = ANSI<`${Layer};2;${Red};${Green};${Blue}`>\n\nconst toAnsi16m = <Layer extends Lyr = Lyr, Red extends number = number, Green extends number = number, Blue extends number = number>(\n  layer: Layer,\n  red: Red,\n  green: Green,\n  blue: Blue\n): ANSI16m<Layer, Red, Green, Blue> => {\n  return toAnsi(`${layer};2;${red};${green};${blue}`)\n}\n\nexport default toAnsi16m\n","import type { ANSI16 } from '../utils'\n\nimport toAnsi16 from './toAnsi16'\n\nexport interface CSPair<Open extends number = number, Close extends number = number> {\n  /**\n   * The ANSI terminal control sequence for starting this style.\n   */\n  readonly open: ANSI16<Open>\n\n  /**\n   * The ANSI terminal control sequence for ending this style.\n   */\n  readonly close: ANSI16<Close>\n}\n\nconst pairCS = <Open extends number = number, Close extends number = number>(\n  open: Open,\n  close: Close\n): CSPair<Open, Close> => {\n  return {\n    open: toAnsi16(open),\n    close: toAnsi16(close)\n  } as const\n}\n\nexport default pairCS\n","import type { StyleNumbers } from '../types'\n\nconst mapCodes = <StyleNums extends StyleNumbers = StyleNumbers>(\n  styleNumbers: StyleNums\n): Map<number, number> => {\n  const codes = new Map<number, number>()\n\n  Object.values(styleNumbers).forEach(([open, close]) => {\n    codes.set(open, close)\n  })\n\n  return codes\n}\n\nexport default mapCodes\n","const ansi256ToAnsi = (\n  code: number\n): number => {\n  if (code < 8) return 30 + code\n  if (code < 16) return 90 + (code - 8)\n\n  let red\n  let green\n  let blue\n\n  if (code >= 232) {\n    red = (((code - 232) * 10) + 8) / 255\n    green = red\n    blue = red\n  } else {\n    code -= 16\n\n    const remainder = code % 36\n\n    red = Math.floor(code / 36) / 5\n    green = Math.floor(remainder / 6) / 5\n    blue = (remainder % 6) / 5\n  }\n\n  const value = Math.max(red, green, blue) * 2\n\n  if (value === 0) return 30\n\n  let result = 30 + (\n    (Math.round(blue) << 2) |\n    (Math.round(green) << 1) |\n    Math.round(red)\n  )\n\n  if (value === 2) result += 60\n\n  return result\n}\n\nexport default ansi256ToAnsi\n","const rgbToAnsi256 = (\n  red: number,\n  green: number,\n  blue: number\n): number => {\n  // We use the extended greyscale palette here, with the exception of\n  // black and white. normal palette only has 4 greyscale shades.\n  if (red === green && green === blue) {\n    if (red < 8) return 16\n    if (red > 248) return 231\n    return Math.round(((red - 8) / 247) * 24) + 232\n  }\n\n  return 16 +\n    (36 * Math.round(red / 255 * 5)) +\n    (6 * Math.round(green / 255 * 5)) +\n    Math.round(blue / 255 * 5)\n}\n\nexport default rgbToAnsi256\n","const hexToRgb = (\n  hex: number | string\n): [number, number, number] => {\n  const matches = /[a-f\\d]{6}|[a-f\\d]{3}/i.exec(hex.toString(16))\n  if (matches === null) return [0, 0, 0]\n\n  let [colorString] = matches\n\n  if (colorString.length === 3) {\n    colorString = [...colorString].map(character => character + character).join('')\n  }\n\n  const integer = Number.parseInt(colorString, 16)\n\n  return [\n    (integer >> 16) & 0xFF,\n    (integer >> 8) & 0xFF,\n    integer & 0xFF\n  ]\n}\n\nexport default hexToRgb\n","import rgbToAnsi256 from './rgbToAnsi256'\nimport hexToRgb from './hexToRgb'\n\nconst hexToAnsi256 = (\n  hex: number | string\n): number => {\n  const [red, green, blue] = hexToRgb(hex)\n  return rgbToAnsi256(red, green, blue)\n}\n\nexport default hexToAnsi256\n","import ansi256ToAnsi from './ansi256ToAnsi'\nimport hexToAnsi256 from './hexToAnsi256'\n\nconst hexToAnsi = (\n  hex: number | string\n): number => {\n  const ansi256 = hexToAnsi256(hex)\n  return ansi256ToAnsi(ansi256)\n}\n\nexport default hexToAnsi\n","import ansi256ToAnsi from './ansi256ToAnsi'\nimport rgbToAnsi256 from './rgbToAnsi256'\n\nconst rgbToAnsi = (\n  red: number,\n  green: number,\n  blue: number\n): number => {\n  const ansi256 = rgbToAnsi256(red, green, blue)\n  return ansi256ToAnsi(ansi256)\n}\n\nexport default rgbToAnsi\n","import { MODIFIER } from '../consts'\nimport { pairCS } from '../utils'\n\nconst modifier = {\n  /**\n   * Resets the current color chain.\n   */\n  reset: pairCS(...MODIFIER.reset),\n\n  /**\n   * Make text bold.\n   */\n  bold: pairCS(...MODIFIER.bold),\n\n  /**\n   * Emitting only a small amount of light.\n   */\n  dim: pairCS(...MODIFIER.dim),\n\n  /**\n   * Make text italic. (Not widely supported).\n   */\n  italic: pairCS(...MODIFIER.italic),\n\n  /**\n   * Make text underline. (Not widely supported).\n   */\n  underline: pairCS(...MODIFIER.underline),\n\n  /**\n   * Inverse background and foreground colors.\n   */\n  inverse: pairCS(...MODIFIER.inverse),\n\n  /**\n   * Prints the text, but makes it invisible.\n   */\n  hidden: pairCS(...MODIFIER.hidden),\n\n  /**\n   * Puts a horizontal line through the center of the text. (Not widely\n   * supported).\n   */\n  strikethrough: pairCS(...MODIFIER.strikethrough),\n\n  /**\n   * Make text overline.\n   *\n   * Supported on VTE-based terminals, the GNOME terminal, mintty, and Git Bash.\n   */\n  overline: pairCS(...MODIFIER.overline)\n} as const\n\nexport type Modifier = typeof modifier\n\n/**\n * Basic modifier names.\n */\nexport type ModifierName = keyof Modifier\n\nexport default modifier\n","import { FOREGROUND_COLOR } from '../consts'\nimport { pairCS } from '../utils'\n\nconst foregroundColor = {\n  black: pairCS(...FOREGROUND_COLOR.black),\n  red: pairCS(...FOREGROUND_COLOR.red),\n  green: pairCS(...FOREGROUND_COLOR.green),\n  yellow: pairCS(...FOREGROUND_COLOR.yellow),\n  blue: pairCS(...FOREGROUND_COLOR.blue),\n  magenta: pairCS(...FOREGROUND_COLOR.magenta),\n  cyan: pairCS(...FOREGROUND_COLOR.cyan),\n  white: pairCS(...FOREGROUND_COLOR.white),\n  // Bright color\n  gray: pairCS(...FOREGROUND_COLOR.gray),\n  grey: pairCS(...FOREGROUND_COLOR.grey),\n  blackBright: pairCS(...FOREGROUND_COLOR.blackBright),\n  redBright: pairCS(...FOREGROUND_COLOR.redBright),\n  greenBright: pairCS(...FOREGROUND_COLOR.greenBright),\n  yellowBright: pairCS(...FOREGROUND_COLOR.yellowBright),\n  blueBright: pairCS(...FOREGROUND_COLOR.blueBright),\n  magentaBright: pairCS(...FOREGROUND_COLOR.magentaBright),\n  cyanBright: pairCS(...FOREGROUND_COLOR.cyanBright),\n  whiteBright: pairCS(...FOREGROUND_COLOR.whiteBright)\n} as const\n\nexport type ForegroundColor = typeof foregroundColor\n\n/**\n * Basic foreground color names.\n *\n * [More colors here.](https://github.com/chalk/chalk/blob/main/readme.md#256-and-truecolor-color-support)\n */\nexport type ForegroundColorName = keyof ForegroundColor\n\nexport default foregroundColor\n","import { BACKGROUND_COLOR } from '../consts'\nimport { pairCS } from '../utils'\n\nconst backgroundColor = {\n  bgBlack: pairCS(...BACKGROUND_COLOR.bgBlack),\n  bgRed: pairCS(...BACKGROUND_COLOR.bgRed),\n  bgGreen: pairCS(...BACKGROUND_COLOR.bgGreen),\n  bgYellow: pairCS(...BACKGROUND_COLOR.bgYellow),\n  bgBlue: pairCS(...BACKGROUND_COLOR.bgBlue),\n  bgMagenta: pairCS(...BACKGROUND_COLOR.bgMagenta),\n  bgCyan: pairCS(...BACKGROUND_COLOR.bgCyan),\n  bgWhite: pairCS(...BACKGROUND_COLOR.bgWhite),\n  // Bright color\n  bgGray: pairCS(...BACKGROUND_COLOR.bgGray),\n  bgGrey: pairCS(...BACKGROUND_COLOR.bgGrey),\n  bgBlackBright: pairCS(...BACKGROUND_COLOR.bgBlackBright),\n  bgRedBright: pairCS(...BACKGROUND_COLOR.bgRedBright),\n  bgGreenBright: pairCS(...BACKGROUND_COLOR.bgGreenBright),\n  bgYellowBright: pairCS(...BACKGROUND_COLOR.bgYellowBright),\n  bgBlueBright: pairCS(...BACKGROUND_COLOR.bgBlueBright),\n  bgMagentaBright: pairCS(...BACKGROUND_COLOR.bgMagentaBright),\n  bgCyanBright: pairCS(...BACKGROUND_COLOR.bgCyanBright),\n  bgWhiteBright: pairCS(...BACKGROUND_COLOR.bgWhiteBright)\n} as const\n\nexport type BackgroundColor = typeof backgroundColor\n\n/**\n * Basic background color names.\n *\n * [More colors here.](https://github.com/chalk/chalk/blob/main/readme.md#256-and-truecolor-color-support)\n */\nexport type BackgroundColorName = keyof BackgroundColor\n\nexport default backgroundColor\n","import type {\n  Modifier,\n  ModifierName,\n  ForegroundColorName,\n  BackgroundColorName\n} from './styles'\n\nimport type {\n  ColorName\n} from './types'\n\nimport {\n  MODIFIER,\n  FOREGROUND_COLOR,\n  FOREGROUND_COLOR_CLOSE,\n  BACKGROUND_COLOR,\n  BACKGROUND_COLOR_CLOSE,\n  LAYER\n} from './consts'\n\nimport {\n  toAnsi16,\n  toAnsi256,\n  toAnsi16m,\n  mapCodes\n} from './utils'\n\nimport {\n  ansi256ToAnsi,\n  hexToAnsi,\n  hexToAnsi256,\n  hexToRgb,\n  rgbToAnsi,\n  rgbToAnsi256\n} from './converters'\n\nimport {\n  modifier,\n  foregroundColor,\n  backgroundColor\n} from './styles'\n\n/**\n * ANSI color styles.\n */\nconst styles = {\n  ...modifier,\n  ...foregroundColor,\n  ...backgroundColor\n} as const\n\nexport type Styles = typeof styles\n\n// Define private `modifier` group.\n\nObject.defineProperty(styles, 'modifier', {\n  value: modifier,\n  writable: false,\n  enumerable: false,\n  configurable: false\n})\n\n// Define private `color` group.\n\nconst color = {\n  ...foregroundColor,\n  close: toAnsi16(FOREGROUND_COLOR_CLOSE),\n  ansi: toAnsi16,\n  ansi256: <Num extends number = number>(num: Num) => toAnsi256(LAYER.foreground, num),\n  ansi16m: <Red extends number = number, Green extends number = number, Blue extends number = number>(red: Red, green: Green, blue: Blue) => toAnsi16m(LAYER.foreground, red, green, blue)\n}\n\nexport type Color = typeof color\n\nObject.defineProperty(styles, 'color', {\n  value: color,\n  writable: false,\n  enumerable: false,\n  configurable: false\n})\n\n// Define private `bgColor` group.\n\nconst bgColor = {\n  ...backgroundColor,\n  close: toAnsi16(BACKGROUND_COLOR_CLOSE),\n  ansi: toAnsi16,\n  ansi256: <Num extends number = number>(num: Num) => toAnsi256(LAYER.background, num),\n  ansi16m: <Red extends number = number, Green extends number = number, Blue extends number = number>(red: Red, green: Green, blue: Blue) => toAnsi16m(LAYER.background, red, green, blue)\n}\n\nexport type BgColor = typeof bgColor\n\nObject.defineProperty(styles, 'bgColor', {\n  value: bgColor,\n  writable: false,\n  enumerable: false,\n  configurable: false\n})\n\n// Define private `codes` property.\n\nconst codes = mapCodes({\n  ...MODIFIER,\n  ...FOREGROUND_COLOR,\n  ...BACKGROUND_COLOR\n})\n\nexport type Codes = typeof codes\n\nObject.defineProperty(styles, 'codes', {\n  value: codes,\n  writable: false,\n  enumerable: false,\n  configurable: false\n})\n\n// Define private methods.\n\nObject.defineProperty(styles, 'rgbToAnsi256', {\n  value: rgbToAnsi256,\n  writable: false,\n  enumerable: false,\n  configurable: false\n})\n\nObject.defineProperty(styles, 'hexToRgb', {\n  value: hexToRgb,\n  writable: false,\n  enumerable: false,\n  configurable: false\n})\n\nObject.defineProperty(styles, 'hexToAnsi256', {\n  value: hexToAnsi256,\n  writable: false,\n  enumerable: false,\n  configurable: false\n})\n\nObject.defineProperty(styles, 'ansi256ToAnsi', {\n  value: ansi256ToAnsi,\n  writable: false,\n  enumerable: false,\n  configurable: false\n})\n\nObject.defineProperty(styles, 'rgbToAnsi', {\n  value: rgbToAnsi,\n  writable: false,\n  enumerable: false,\n  configurable: false\n})\n\nObject.defineProperty(styles, 'hexToAnsi', {\n  value: hexToAnsi,\n  writable: false,\n  enumerable: false,\n  configurable: false\n})\n\n// Export style names.\n\nexport const modifierNames = Object.keys(\n  modifier\n) as readonly ModifierName[]\n\nexport const foregroundColorNames = Object.keys(\n  foregroundColor\n) as readonly ForegroundColorName[]\n\nexport const backgroundColorNames = Object.keys(\n  backgroundColor\n) as readonly BackgroundColorName[]\n\nexport const colorNames = [\n  ...foregroundColorNames,\n  ...backgroundColorNames\n] as readonly ColorName[]\n\n// Export `AnsiStyles` type.\n\nexport type AnsiStyles = Styles & {\n  readonly modifier: Modifier\n  readonly color: Color\n  readonly bgColor: BgColor\n  readonly codes: Codes\n  readonly rgbToAnsi256: typeof rgbToAnsi256\n  readonly hexToRgb: typeof hexToRgb\n  readonly hexToAnsi256: typeof hexToAnsi256\n  readonly ansi256ToAnsi: typeof ansi256ToAnsi\n  readonly rgbToAnsi: typeof rgbToAnsi\n  readonly hexToAnsi: typeof hexToAnsi\n}\n\n// Export `ansiStyles`.\n\nexport const ansiStyles = styles as AnsiStyles\n\n// Export `styles` as a default value.\nexport default styles\n"],"names":["ESCAPE","LAYER","MODIFIER","FOREGROUND_COLOR_CLOSE","FOREGROUND_COLOR","BACKGROUND_COLOR_CLOSE","BACKGROUND_COLOR","toAnsi","param","toAnsi16","num","toAnsi256","layer","toAnsi16m","red","green","blue","pairCS","open","close","mapCodes","styleNumbers","codes","ansi256ToAnsi","code","remainder","value","result","rgbToAnsi256","hexToRgb","hex","matches","colorString","character","integer","hexToAnsi256","hexToAnsi","ansi256","rgbToAnsi","modifier","foregroundColor","backgroundColor","styles","color","bgColor","modifierNames","foregroundColorNames","backgroundColorNames","colorNames","ansiStyles"],"mappings":"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"}